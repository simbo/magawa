{"version":3,"file":"highscores-view-2N2E5taU.js","sources":["../../src/scripts/components/highscores-view.tsx"],"sourcesContent":["import { Component, createRef, h, VNode } from 'preact';\nimport { Link } from 'preact-router';\n\nimport { AppRoute } from '../lib/app-route.enum';\nimport { formatDate } from '../lib/format-date.function';\nimport { DEFAULT_GAME_DIFFICULTY, GameDifficulty } from '../lib/game-difficulty';\nimport { highscoresManager } from '../lib/highscores-manager';\nimport { HighscoreGameDifficulty, HighscoresList } from '../lib/highscores.interface';\nimport { IconName } from '../lib/icon-name.enum';\n\nimport { HighscoresTable } from './highscores-table';\n\ninterface HighscoresViewState {\n  difficulty: HighscoreGameDifficulty;\n  player: string;\n  list?: HighscoresList | null;\n  updated?: Date | null;\n}\n\nexport class HighscoresView extends Component<object, HighscoresViewState> {\n  private readonly difficulties = Object.entries(GameDifficulty).filter(\n    ([, value]) => typeof value === 'number' && value !== GameDifficulty.Custom\n  ) as [string, HighscoreGameDifficulty][];\n\n  private readonly refSelect = createRef<HTMLSelectElement>();\n  private readonly refInput = createRef<HTMLInputElement>();\n\n  constructor(props: object, state: HighscoresViewState) {\n    super(props, state);\n    const difficulty = DEFAULT_GAME_DIFFICULTY;\n    const player = '';\n    this.setState({ difficulty, player });\n    this.request(difficulty, player);\n  }\n\n  public render(_props: object, { difficulty, player, list, updated }: HighscoresViewState): VNode {\n    return (\n      <div class=\"c-highscores-view\">\n        <h1 class=\"c-highscores-view__title e-title\">\n          Highscores <img class=\"e-icon\" src={`icons/${IconName.Trophy}.png`} />\n        </h1>\n        <div class=\"c-highscores-view__options\">\n          <div class=\"c-highscores-view__option\">\n            <label class=\"c-highscores-view__label e-label\" htmlFor=\"difficulty\">\n              Difficulty\n            </label>\n            <select\n              ref={this.refSelect}\n              onChange={this.onChange}\n              class=\"c-highscores-view__select e-select\"\n              id=\"difficulty\"\n              name=\"difficulty\"\n            >\n              {this.difficulties.map(([key, value]) => (\n                <option class=\"c-highscores-view__option e-option\" value={value} selected={difficulty === value}>\n                  {key}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div class=\"c-highscores-view__option\">\n            <label class=\"c-highscores-view__label e-label\" htmlFor=\"player\">\n              Player\n            </label>\n            <input\n              ref={this.refInput}\n              onChange={this.onChange}\n              id=\"player\"\n              name=\"player\"\n              pattern=\"^\\w*$\"\n              class=\"c-highscores-view__input e-input\"\n              value={player}\n            />\n          </div>\n        </div>\n        <div class=\"c-highscores-view__table\">\n          <HighscoresTable list={list} highlight=\"CrjD8A1cqGjxtpVT70aMM\" />\n        </div>\n        {updated ? <div class=\"c-highscores-view__updated\">Updated at {formatDate(updated)}</div> : ''}\n        <div className=\"e-back-button\">\n          <Link href={AppRoute.Home} class=\"e-back-button__button e-button\">\n            ‚Üê Back\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  private readonly onChange = (event: Event): void => {\n    event.preventDefault();\n    const difficulty = Number.parseInt(`${this.refSelect.current?.value}`, 10);\n    const player = this.refInput.current?.value;\n    this.request(difficulty, player);\n  };\n\n  private request(difficulty: HighscoreGameDifficulty, player?: string): void {\n    highscoresManager.get(difficulty, player).subscribe(\n      ({ list, updated }) => {\n        this.setState({ difficulty, player, list, updated });\n      },\n      err => {\n        console.error(err);\n        this.setState({ difficulty, player, list: null, updated: null });\n      }\n    );\n  }\n}\n"],"names":["HighscoresView","Component","GameDifficulty","value","createRef","props","state","difficulty","DEFAULT_GAME_DIFFICULTY","player","_props","list","updated","h","IconName","key","HighscoresTable","formatDate","Link","AppRoute","event","highscoresManager","err"],"mappings":"sOAmBO,MAAMA,UAAuBC,CAAuC,CACxD,aAAe,OAAO,QAAQC,CAAc,EAAE,OAC7D,CAAC,CAAA,CAAGC,CAAK,IAAM,OAAOA,GAAU,UAAYA,IAAUD,EAAe,MAAA,EAGtD,UAAYE,EAA6B,EACzC,SAAWA,EAA4B,EAExD,YAAYC,EAAeC,EAA4B,CACrD,MAAMD,EAAOC,CAAK,EAClB,MAAMC,EAAaC,EACbC,EAAS,GACf,KAAK,SAAS,CAAE,WAAAF,EAAY,OAAAE,CAAQ,CAAA,EAC/B,KAAA,QAAQF,EAAYE,CAAM,CACjC,CAEO,OAAOC,EAAgB,CAAE,WAAAH,EAAY,OAAAE,EAAQ,KAAAE,EAAM,QAAAC,GAAuC,CAC/F,OACGC,EAAA,MAAA,CAAI,MAAM,mBAAA,IACR,KAAG,CAAA,MAAM,kCAAmC,EAAA,gBAC/B,MAAI,CAAA,MAAM,SAAS,IAAK,SAASC,EAAS,MAAM,MAAQ,CAAA,CACtE,EACCD,EAAA,MAAA,CAAI,MAAM,gCACR,MAAI,CAAA,MAAM,2BACT,EAAAA,EAAC,SAAM,MAAM,mCAAmC,QAAQ,YAAA,EAAa,YAErE,EACAA,EAAC,SAAA,CACC,IAAK,KAAK,UACV,SAAU,KAAK,SACf,MAAM,qCACN,GAAG,aACH,KAAK,YAAA,EAEJ,KAAK,aAAa,IAAI,CAAC,CAACE,EAAKZ,CAAK,IAChCU,EAAA,SAAA,CAAO,MAAM,qCAAqC,MAAAV,EAAc,SAAUI,IAAeJ,CAAA,EACvFY,CACH,CACD,CAAA,CAEL,EACCF,EAAA,MAAA,CAAI,MAAM,2BAAA,EACRA,EAAA,QAAA,CAAM,MAAM,mCAAmC,QAAQ,QAAA,EAAS,QAEjE,EACAA,EAAC,QAAA,CACC,IAAK,KAAK,SACV,SAAU,KAAK,SACf,GAAG,SACH,KAAK,SACL,QAAQ,SACR,MAAM,mCACN,MAAOJ,CAAA,CAAA,CAEX,CACF,EACCI,EAAA,MAAA,CAAI,MAAM,0BACT,EAAAA,EAACG,EAAgB,CAAA,KAAAL,EAAY,UAAU,uBAAwB,CAAA,CACjE,EACCC,EAAUC,EAAC,OAAI,MAAM,4BAAA,EAA6B,cAAYI,EAAWL,CAAO,CAAE,EAAS,GAC5FC,EAAC,OAAI,UAAU,iBACZA,EAAAK,EAAA,CAAK,KAAMC,EAAS,KAAM,MAAM,gCAAiC,EAAA,QAElE,CACF,CACF,CAEJ,CAEiB,SAAYC,GAAuB,CAClDA,EAAM,eAAe,EACf,MAAAb,EAAa,OAAO,SAAS,GAAG,KAAK,UAAU,SAAS,KAAK,GAAI,EAAE,EACnEE,EAAS,KAAK,SAAS,SAAS,MACjC,KAAA,QAAQF,EAAYE,CAAM,CAAA,EAGzB,QAAQF,EAAqCE,EAAuB,CACxDY,EAAA,IAAId,EAAYE,CAAM,EAAE,UACxC,CAAC,CAAE,KAAAE,EAAM,QAAAC,KAAc,CACrB,KAAK,SAAS,CAAE,WAAAL,EAAY,OAAAE,EAAQ,KAAAE,EAAM,QAAAC,EAAS,CACrD,EACOU,GAAA,CACL,QAAQ,MAAMA,CAAG,EACZ,KAAA,SAAS,CAAE,WAAAf,EAAY,OAAAE,EAAQ,KAAM,KAAM,QAAS,KAAM,CACjE,CAAA,CAEJ,CACF"}