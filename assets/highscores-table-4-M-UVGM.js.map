{"version":3,"file":"highscores-table-4-M-UVGM.js","sources":["../../node_modules/path-slashes/dist/path-slashes.js","../../src/scripts/lib/api.ts","../../src/scripts/lib/highscores.ts","../../src/scripts/lib/add-zeros.ts","../../src/scripts/lib/format-duration.function.ts","../../src/scripts/lib/format-date.function.ts","../../src/scripts/components/highscores-table.tsx"],"sourcesContent":["/**\n * Checks if given path has a leading slash\n */\nexport function hasLeadingSlash(path) {\n    path = `${path}`;\n    return path.slice(0, 1) === '/';\n}\n/**\n * Checks if given path has a trailing slash\n */\nexport function hasTrailingSlash(path) {\n    path = `${path}`;\n    return path.slice(-1) === '/';\n}\n/**\n * Ensures given path has a leading slash\n */\nexport function withLeadingSlash(path) {\n    path = `${path}`;\n    return hasLeadingSlash(path) ? path : `/${path}`;\n}\n/**\n * Ensures given path has a trailing slash\n */\nexport function withTrailingSlash(path) {\n    path = `${path}`;\n    return hasTrailingSlash(path) ? path : `${path}/`;\n}\n/**\n * Ensures given path has both leading and trailing slashes\n */\nexport function withSlashes(path) {\n    path = `${path}`;\n    return withLeadingSlash(withTrailingSlash(path));\n}\n/**\n * Ensures given path has no leading slash\n */\nexport function withoutLeadingSlash(path) {\n    path = `${path}`;\n    return hasLeadingSlash(path) ? path.slice(1) : path;\n}\n/**\n * Ensures given path has no trailing slash\n */\nexport function withoutTrailingSlash(path) {\n    path = `${path}`;\n    return hasTrailingSlash(path) ? path.slice(0, -1) : path;\n}\n/**\n * Ensures given path has neither leading nor trailing slashes\n */\nexport function withoutSlashes(path) {\n    path = `${path}`;\n    return withoutLeadingSlash(withoutTrailingSlash(path));\n}\n/**\n * Join path parts and add slashes where necessary\n */\nexport function slashJoin(...strings) {\n    const parts = strings.flat();\n    return parts\n        .map((part, i) => {\n        if (i === 0) {\n            return parts.length === 1 ? part : withoutTrailingSlash(part);\n        }\n        else if (i === parts.length - 1) {\n            return withoutLeadingSlash(part);\n        }\n        else {\n            return withoutSlashes(part);\n        }\n    })\n        .join('/');\n}\n//# sourceMappingURL=path-slashes.js.map","import { slashJoin } from 'path-slashes';\n\nexport function apiUrl(pathParams: string | string[], queryParams: { [key: string]: string } = {}): string {\n  pathParams = Array.isArray(pathParams) ? pathParams : [pathParams];\n  const url = new URL(APP_API_URL);\n  url.pathname = slashJoin(url.pathname, ...pathParams);\n  const query = new URLSearchParams(Object.entries(queryParams));\n  url.search = query.toString();\n  return url.toString();\n}\n\nexport async function apiFetch<O = unknown>(url: string, options: RequestInit = {}): Promise<O> {\n  const response = await fetch(url, options);\n  const json = (await response.json()) as O;\n  return json;\n}\n\nexport async function apiPost<I = unknown, O = unknown>(url: string, payload: I): Promise<O> {\n  return apiFetch<O>(url, {\n    headers: { 'Content-Type': 'application/json;charset=utf-8' },\n    method: 'post',\n    body: JSON.stringify(payload)\n  });\n}\n","import { compressToUTF16 } from 'lz-string';\n\nimport { apiFetch, apiPost, apiUrl } from './api';\nimport { GameDifficulty } from './game-difficulty';\n\nexport type HighscoreGameDifficulty = GameDifficulty.Easy | GameDifficulty.Medium | GameDifficulty.Hard;\n\nexport interface HighscoresCollection {\n  items: Highscore[];\n  total: number;\n  perPage: number;\n  page: number;\n  pages: number;\n  previousPage?: number;\n  nextPage?: number;\n}\n\nexport interface Highscore {\n  id: string;\n  rank: number;\n  player: string;\n  date: Date;\n  time: number;\n}\n\ninterface HighscoreOptions {\n  difficulty: HighscoreGameDifficulty;\n  page?: number;\n  player?: string;\n  perPage?: number;\n  rank?: number;\n}\n\nexport async function getHighscores(options: HighscoreOptions): Promise<HighscoresCollection> {\n  const { difficulty, player, page, perPage, rank } = { perPage: 10, ...options };\n  const pathParams = ['highscores', `${difficulty}`];\n  const queryParams: { [key: string]: string } = { page: `${page}`, perPage: `${perPage}` };\n  if (player) {\n    queryParams.player = `${player}`;\n  }\n  const collection = await apiFetch<HighscoresCollection>(apiUrl(pathParams, rank ? { rank: `${rank}` } : queryParams));\n  return collection;\n}\n\nexport async function addHighscore(\n  difficulty: HighscoreGameDifficulty,\n  player: string,\n  time: number\n): Promise<Highscore> {\n  const data = compressToUTF16(JSON.stringify({ player, time }));\n  const highscore = await apiPost<{ data: string }, Highscore>(apiUrl(['highscores', `${difficulty}`]), { data });\n  return highscore;\n}\n","export function addZeros(num: number, totalLength = 2): string {\n  const str = `${num}`;\n  const i = Math.max(0, totalLength - str.length);\n  return `${'0'.repeat(i)}${str}`;\n}\n","import { addZeros } from './add-zeros';\n\nexport function formatDuration(duration: number, withMilliseconds = true): string {\n  // const hours = Math.floor(duration / 3600000);\n  // duration -= hours * 3600000;\n  const minutes = Math.floor(duration / 60_000);\n  duration -= minutes * 60_000;\n  const seconds = Math.floor(duration / 1000);\n  return `${addZeros(minutes)}:${addZeros(seconds)}${\n    withMilliseconds ? `:${addZeros(duration - seconds * 1000, 3)}` : ''\n  }`;\n}\n","import { addZeros } from './add-zeros';\n\nexport function formatDate(date: Date | string, withTime = true): string {\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n  const day = addZeros(date.getDate());\n  const month = addZeros(date.getMonth() + 1);\n  const year = date.getFullYear();\n  const hours = addZeros(date.getHours());\n  const minutes = addZeros(date.getMinutes());\n  const seconds = addZeros(date.getSeconds());\n  let formatted = `${day}.${month}.${year}`;\n  if (withTime) {\n    formatted += ` ${hours}:${minutes}:${seconds}`;\n  }\n  return formatted;\n}\n","import { Component, h, VNode } from 'preact';\n\nimport { formatDate } from '../lib/format-date.function';\nimport { formatDuration } from '../lib/format-duration.function';\nimport { Highscore } from '../lib/highscores';\n\ninterface HighscoresTableProps {\n  rows?: Highscore[];\n  highlight?: string;\n}\n\nexport class HighscoresTable extends Component<HighscoresTableProps> {\n  public render({ rows, highlight }: HighscoresTableProps): VNode {\n    return (\n      <table class=\"c-highscores-table\">\n        <thead>\n          <tr class=\"c-highscores-table__head-row\">\n            <th class=\"c-highscores-table__head-cell c-highscores-table__head-cell--rank\">#</th>\n            <th class=\"c-highscores-table__head-cell c-highscores-table__head-cell--name\">Name</th>\n            <th class=\"c-highscores-table__head-cell c-highscores-table__head-cell--time\">Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {(rows || []).map(({ id, rank, player, time, date }) => (\n            <tr\n              title={`${player} 🏆 ${formatDate(date)}`}\n              class={`c-highscores-table__row ${id === highlight ? 'c-highscores-table__row--highlight' : ''}`}\n            >\n              <td class=\"c-highscores-table__cell c-highscores-table__cell--rank\">{rank}</td>\n              <td class=\"c-highscores-table__cell c-highscores-table__cell--name\">{player}</td>\n              <td class=\"c-highscores-table__cell c-highscores-table__cell--time\">{formatDuration(time)}</td>\n            </tr>\n          ))}\n        </tbody>\n        {!rows || rows.length === 0 ? (\n          <tfoot>\n            <tr class=\"c-highscores-table__foot-row\">\n              {rows ? (\n                <td colSpan={3} class=\"c-highscores-table__foot-cell c-highscores-table__foot-cell--empty\">\n                  No entries found.\n                </td>\n              ) : (\n                <td colSpan={3} class=\"c-highscores-table__foot-cell c-highscores-table__foot-cell--loading\">\n                  Loading...\n                </td>\n              )}\n            </tr>\n          </tfoot>\n        ) : (\n          ''\n        )}\n      </table>\n    );\n  }\n}\n"],"names":["hasLeadingSlash","path","hasTrailingSlash","withoutLeadingSlash","withoutTrailingSlash","withoutSlashes","slashJoin","strings","parts","part","i","apiUrl","pathParams","queryParams","url","query","apiFetch","options","apiPost","payload","getHighscores","difficulty","player","page","perPage","rank","addHighscore","time","data","compressToUTF16","addZeros","num","totalLength","str","formatDuration","duration","withMilliseconds","minutes","seconds","formatDate","date","withTime","day","month","year","hours","formatted","HighscoresTable","Component","rows","highlight","h","id"],"mappings":"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","x_google_ignoreList":[0]}