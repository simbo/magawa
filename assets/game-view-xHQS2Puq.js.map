{"version":3,"file":"game-view-xHQS2Puq.js","sources":["../../src/scripts/components/congratulations.tsx","../../src/scripts/components/flags.tsx","../../node_modules/array-shuffle/index.js","../../node_modules/path-slashes/dist/path-slashes.js","../../src/scripts/lib/paint-assets.ts","../../src/scripts/lib/paint-container.ts","../../src/scripts/lib/paint-text.ts","../../src/scripts/lib/paint-texture.ts","../../src/scripts/lib/game-tile.ts","../../src/scripts/lib/paint-engine.ts","../../src/scripts/lib/game-board.ts","../../src/scripts/components/game-gfx.tsx","../../src/scripts/components/restart.tsx","../../src/scripts/components/timer.tsx","../../src/scripts/components/game-view.tsx"],"sourcesContent":["import { Component, h, VNode } from 'preact';\n\nimport { formatDifficulty } from '../lib/format-difficulty.function';\nimport { formatDuration } from '../lib/format-duration.function';\nimport { HighscoresEntry } from '../lib/highscores.interface';\nimport { IconName } from '../lib/icon-name.enum';\n\ninterface CongratulationsProps {\n  entry?: HighscoresEntry;\n}\n\nexport class Congratulations extends Component<CongratulationsProps> {\n  public render({ entry }: CongratulationsProps): VNode {\n    return (\n      <div class=\"c-congratulations\">\n        <div class=\"c-congratulations__title\">\n          <img class=\"e-icon\" src={`icons/${IconName.Party}.png`} /> Congratulations!\n        </div>\n        {entry ? (\n          <div class=\"c-congratulations__text\">\n            You won in <strong>{formatDuration(entry.time)}</strong> claiming rank <strong>{entry.rank}</strong> in\n            highscores for difficulty <em>{formatDifficulty(entry.difficulty)}</em>.\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n","import { Component, h, VNode } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport { IconName } from '../lib/icon-name.enum';\nimport { gameStoreContext } from '../store/game/game-store';\n\nexport class Flags extends Component {\n  public render(): VNode {\n    const { flagsCount, minesCount } = useContext(gameStoreContext);\n    return (\n      <div class=\"c-flags\" title=\"Flags / Mines\">\n        <div class=\"c-flags__label\">\n          {flagsCount}/{minesCount}\n        </div>\n        <div class=\"c-flags__icon\">\n          <img class=\"e-icon\" src={`icons/${IconName.FlagOnGreen}.png`} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n","/**\n * Checks if given path has a leading slash\n */\nexport function hasLeadingSlash(path) {\n    path = `${path}`;\n    return path.slice(0, 1) === '/';\n}\n/**\n * Checks if given path has a trailing slash\n */\nexport function hasTrailingSlash(path) {\n    path = `${path}`;\n    return path.slice(-1) === '/';\n}\n/**\n * Ensures given path has a leading slash\n */\nexport function withLeadingSlash(path) {\n    path = `${path}`;\n    return hasLeadingSlash(path) ? path : `/${path}`;\n}\n/**\n * Ensures given path has a trailing slash\n */\nexport function withTrailingSlash(path) {\n    path = `${path}`;\n    return hasTrailingSlash(path) ? path : `${path}/`;\n}\n/**\n * Ensures given path has both leading and trailing slashes\n */\nexport function withSlashes(path) {\n    path = `${path}`;\n    return withLeadingSlash(withTrailingSlash(path));\n}\n/**\n * Ensures given path has no leading slash\n */\nexport function withoutLeadingSlash(path) {\n    path = `${path}`;\n    return hasLeadingSlash(path) ? path.slice(1) : path;\n}\n/**\n * Ensures given path has no trailing slash\n */\nexport function withoutTrailingSlash(path) {\n    path = `${path}`;\n    return hasTrailingSlash(path) ? path.slice(0, -1) : path;\n}\n/**\n * Ensures given path has neither leading nor trailing slashes\n */\nexport function withoutSlashes(path) {\n    path = `${path}`;\n    return withoutLeadingSlash(withoutTrailingSlash(path));\n}\n/**\n * Join path parts and add slashes where necessary\n */\nexport function slashJoin(...strings) {\n    const parts = strings.flat();\n    return parts\n        .map((part, i) => {\n        if (i === 0) {\n            return parts.length === 1 ? part : withoutTrailingSlash(part);\n        }\n        else if (i === parts.length - 1) {\n            return withoutLeadingSlash(part);\n        }\n        else {\n            return withoutSlashes(part);\n        }\n    })\n        .join('/');\n}\n//# sourceMappingURL=path-slashes.js.map","import { slashJoin } from 'path-slashes';\n\nimport { IconName } from './icon-name.enum';\n\n/**\n * Names of available resources\n */\nexport enum PaintResourceName {\n  Boom = IconName.Boom,\n  Flag = IconName.Flag\n}\n\ninterface PaintResource {\n  name: PaintResourceName;\n  src: string;\n}\n\n/**\n * Asset names with corresponding relative path\n */\nconst CANVAS_ASSETS: PaintResource[] = [\n  { name: PaintResourceName.Boom, src: 'icons/boom.png' },\n  { name: PaintResourceName.Flag, src: 'icons/flag.png' }\n];\n\nexport type PaintAsset = PaintResource & { image: HTMLImageElement };\n\nasync function loadPaintAsset(asset: PaintResource): Promise<PaintAsset> {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('error', error => reject(error));\n    image.addEventListener('load', () => resolve({ ...asset, image: image }));\n    image.src = asset.src;\n  });\n}\n\nconst BASE_URI = document.head.baseURI;\n\nconst CANVAS_IMAGES: { [key in PaintResourceName]?: PaintAsset } = {};\n\nfor (let i = 0; i < CANVAS_ASSETS.length; i++) {\n  const { name, src } = CANVAS_ASSETS[i];\n  const image = await loadPaintAsset({ name, src: slashJoin(BASE_URI, src) });\n  CANVAS_IMAGES[image.name] = image;\n}\n\nexport function getPaintAsset(name: PaintResourceName): PaintAsset {\n  const image = CANVAS_IMAGES[name];\n  if (!image) {\n    throw new Error(`PaintAsset with name '${name}' not found`);\n  }\n  return image;\n}\n","import { PaintEngine } from './paint-engine';\nimport { PaintText } from './paint-text';\nimport { PaintTexture } from './paint-texture';\n\nexport interface PaintContainerOnClickParameters {\n  event: PointerEvent;\n  container: PaintContainer;\n  engine: PaintEngine;\n}\n\nexport type PaintContainerOnClick = (parameters: PaintContainerOnClickParameters) => void;\n\nexport interface PaintContainerOptions {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  fillStyle?: string | CanvasGradient | CanvasPattern;\n  strokeStyle?: string | CanvasGradient | CanvasPattern;\n  strokeWidth?: number;\n  active?: boolean;\n  interactive?: boolean;\n  onClick?: PaintContainerOnClick;\n}\n\nconst DEFAULT_PAINT_CONTAINER_OPTIONS: Partial<PaintContainerOptions> = {\n  width: 10,\n  height: 10,\n  x: 0,\n  y: 0,\n  strokeWidth: 1,\n  active: true,\n  interactive: true\n};\n\nexport class PaintContainer {\n  public readonly width: number;\n  public readonly height: number;\n  public readonly x: number;\n  public readonly y: number;\n\n  public fillStyle?: string | CanvasGradient | CanvasPattern;\n  public strokeStyle?: string | CanvasGradient | CanvasPattern;\n  public strokeWidth?: number;\n\n  public active: boolean;\n  public interactive: boolean;\n\n  public onClick?: PaintContainerOnClick;\n\n  private children: (PaintContainer | PaintTexture | PaintText)[] = [];\n\n  public constructor(options: Partial<PaintContainerOptions>) {\n    const { width, height, x, y, fillStyle, strokeStyle, strokeWidth, active, interactive } = {\n      ...DEFAULT_PAINT_CONTAINER_OPTIONS,\n      ...options\n    };\n\n    this.width = width as number;\n    this.height = height as number;\n    this.x = x as number;\n    this.y = y as number;\n    this.fillStyle = fillStyle;\n    this.strokeStyle = strokeStyle;\n    this.strokeWidth = strokeWidth;\n    this.active = !!active;\n    this.interactive = !!interactive;\n\n    if (options.onClick) {\n      this.onClick = options.onClick;\n    }\n  }\n\n  public render(engine: PaintEngine): void {\n    if (!this.active) {\n      return;\n    }\n\n    if (this.fillStyle || this.strokeStyle) {\n      const strokeWidth = (this.strokeWidth || 1) * engine.pixelDensity;\n      const x = this.x * engine.pixelDensity;\n      const y = this.y * engine.pixelDensity;\n      const width = this.width * engine.pixelDensity;\n      const height = this.height * engine.pixelDensity;\n      const rectProps: [number, number, number, number] = [x, y, width, height];\n\n      if (this.fillStyle) {\n        engine.context.fillStyle = this.fillStyle;\n        engine.context.fillRect(...rectProps);\n      }\n\n      if (this.strokeStyle) {\n        engine.context.strokeStyle = this.strokeStyle;\n        engine.context.lineWidth = strokeWidth;\n        engine.context.strokeRect(...rectProps);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].render(engine, this);\n    }\n  }\n\n  public add(...container: (PaintContainer | PaintTexture | PaintText)[]): void {\n    this.children.push(...container);\n  }\n\n  public clear(): void {\n    this.children = [];\n  }\n\n  public isHitBy(x: number, y: number): boolean {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  }\n}\n","import { PaintContainer } from './paint-container';\nimport { PaintEngine } from './paint-engine';\n\nexport interface PaintTextOptions {\n  text: string;\n  x: number;\n  y: number;\n  fontSize: number;\n  fontFamily: string;\n  textAlign: CanvasTextAlign;\n  textBaseline: CanvasTextBaseline;\n  direction: CanvasDirection;\n  fillStyle: string | CanvasGradient | CanvasPattern;\n  strokeStyle: string | CanvasGradient | CanvasPattern;\n  strokeWidth: number;\n}\n\nconst DEFAULT_PAINT_TEXT_OPTIONS: Partial<PaintTextOptions> = {\n  x: 0,\n  y: 0,\n  fontSize: 24,\n  fontFamily: 'sans-serif',\n  textAlign: 'center',\n  textBaseline: 'middle',\n  direction: 'ltr'\n};\n\nexport class PaintText {\n  private readonly text: string;\n  private readonly x: number;\n  private readonly y: number;\n  private readonly fontSize: number;\n  private readonly fontFamily: string;\n  private readonly textAlign: CanvasTextAlign;\n  private readonly textBaseline: CanvasTextBaseline;\n  private readonly direction: CanvasDirection;\n  private readonly fillStyle?: string | CanvasGradient | CanvasPattern;\n  private readonly strokeStyle?: string | CanvasGradient | CanvasPattern;\n  private readonly strokeWidth?: number;\n\n  public constructor(options: Partial<PaintTextOptions>) {\n    const {\n      text,\n      x,\n      y,\n      fontSize,\n      fontFamily,\n      textAlign,\n      textBaseline,\n      direction,\n      fillStyle,\n      strokeStyle,\n      strokeWidth\n    } = {\n      ...DEFAULT_PAINT_TEXT_OPTIONS,\n      ...options\n    };\n\n    this.text = text as string;\n    this.x = x as number;\n    this.y = y as number;\n    this.fontSize = fontSize as number;\n    this.fontFamily = fontFamily as string;\n    this.textAlign = textAlign as CanvasTextAlign;\n    this.textBaseline = textBaseline as CanvasTextBaseline;\n    this.direction = direction as CanvasDirection;\n    this.fillStyle = fillStyle;\n    this.strokeStyle = strokeStyle;\n    this.strokeWidth = strokeWidth;\n  }\n\n  public render(engine: PaintEngine, container: PaintContainer): void {\n    engine.context.font = `${this.fontSize * engine.pixelDensity}px ${this.fontFamily}`;\n    engine.context.textAlign = this.textAlign;\n    engine.context.textBaseline = this.textBaseline;\n    engine.context.direction = this.direction;\n    if (this.fillStyle || this.strokeStyle) {\n      const strokeWidth = (this.strokeWidth || 1) * engine.pixelDensity;\n      const x = (container.x + this.x) * engine.pixelDensity;\n      const y = (container.y + this.y) * engine.pixelDensity;\n      const textProps: [string, number, number] = [this.text, x, y];\n\n      if (this.fillStyle) {\n        engine.context.fillStyle = this.fillStyle;\n        engine.context.fillText(...textProps);\n      }\n\n      if (this.strokeStyle) {\n        engine.context.strokeStyle = this.strokeStyle;\n        engine.context.lineWidth = strokeWidth;\n        engine.context.strokeText(...textProps);\n      }\n    }\n  }\n}\n","import { getPaintAsset, PaintAsset, PaintResourceName } from './paint-assets';\nimport { PaintContainer } from './paint-container';\nimport { PaintEngine } from './paint-engine';\n\nexport interface PaintTextureOptions {\n  asset: PaintAsset | PaintResourceName;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport class PaintTexture {\n  private readonly asset: PaintAsset;\n\n  public readonly x: number;\n  public readonly y: number;\n  public readonly width: number;\n  public readonly height: number;\n\n  public constructor(options: PaintTextureOptions) {\n    if (typeof options.asset === 'string') {\n      options.asset = getPaintAsset(options.asset as PaintResourceName);\n    }\n    this.asset = options.asset;\n    this.x = options.x || 0;\n    this.y = options.y || 0;\n    this.width = options.width || this.asset.image.width || 0;\n    this.height = options.height || this.asset.image.height || 0;\n  }\n\n  public render(engine: PaintEngine, container: PaintContainer): void {\n    const x = (container.x + this.x) * engine.pixelDensity;\n    const y = (container.y + this.y) * engine.pixelDensity;\n    const width = this.width * engine.pixelDensity;\n    const height = this.height * engine.pixelDensity;\n    engine.context.drawImage(this.asset.image, x, y, width, height);\n  }\n}\n","import { PaintResourceName } from './paint-assets';\nimport { PaintContainer, PaintContainerOnClick } from './paint-container';\nimport { PaintText } from './paint-text';\nimport { PaintTexture } from './paint-texture';\n\nenum GameTileColor {\n  Line = '#ebdfbe',\n  FillCovered = '#6b8e23',\n  FillUncovered = '#f9edcc'\n}\n\nexport class GameTile {\n  public readonly container: PaintContainer;\n  public readonly posX: number;\n  public readonly posY: number;\n\n  private mined = false;\n  private covered = true;\n  private flagged = false;\n  private nearbyMines = 0;\n\n  constructor(\n    public readonly x: number,\n    public readonly y: number,\n    private readonly size: number,\n    onClick: PaintContainerOnClick\n  ) {\n    this.posX = this.size * this.x;\n    this.posY = this.size * this.y;\n    this.container = new PaintContainer({ width: this.size, height: this.size, x: this.posX, y: this.posY, onClick });\n    this.updateContainer();\n  }\n\n  public get isMined(): boolean {\n    return this.mined;\n  }\n\n  public get isCovered(): boolean {\n    return this.covered;\n  }\n\n  public get isFlagged(): boolean {\n    return this.flagged;\n  }\n\n  public get hasNearbyMines(): number {\n    return this.nearbyMines;\n  }\n\n  public populate(isMined: boolean, nearbyMines: number): void {\n    this.mined = isMined;\n    this.nearbyMines = nearbyMines;\n  }\n\n  public uncover(): void {\n    this.container.interactive = false;\n    this.covered = false;\n    this.flagged = false;\n    this.updateContainer();\n  }\n\n  public toggleFlag(): void {\n    this.flagged = !this.flagged;\n    this.updateContainer();\n  }\n\n  private updateContainer(): void {\n    this.container.clear();\n    this.container.fillStyle = this.covered ? GameTileColor.FillCovered : GameTileColor.FillUncovered;\n    this.container.strokeStyle = GameTileColor.Line;\n    if (this.covered) {\n      if (this.flagged) {\n        this.container.add(\n          new PaintTexture({\n            asset: PaintResourceName.Flag,\n            width: this.size * 0.65,\n            height: this.size * 0.65,\n            x: (this.size - this.size * 0.65) / 2,\n            y: (this.size - this.size * 0.65) / 2\n          })\n        );\n      }\n      return;\n    }\n    if (this.mined) {\n      this.container.add(\n        new PaintTexture({\n          asset: PaintResourceName.Boom,\n          width: this.size,\n          height: this.size\n        })\n      );\n    } else if (this.nearbyMines > 0) {\n      this.container.add(\n        new PaintText({\n          text: `${this.nearbyMines}`,\n          fillStyle: 'black',\n          x: this.size / 2,\n          y: this.size / 2\n        })\n      );\n    }\n  }\n}\n","import { PaintContainer } from './paint-container';\n\nexport interface PaintEngineOptions {\n  canvas: HTMLCanvasElement | string;\n  pixelDensity: number;\n  width: number;\n  height: number;\n}\n\nconst DEFAULT_CANVAS_ENGINE_OPTIONS: Partial<PaintEngineOptions> = {\n  pixelDensity: 2,\n  width: 320,\n  height: 320\n};\n\nexport class PaintEngine {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly context: CanvasRenderingContext2D;\n  public readonly pixelDensity: number;\n  public readonly width: number;\n  public readonly height: number;\n\n  private children: PaintContainer[] = [];\n\n  public constructor(options: Partial<PaintEngineOptions>) {\n    if (typeof options.canvas === 'string') {\n      options.canvas = document.querySelector(options.canvas) as HTMLCanvasElement;\n    }\n    const { canvas, pixelDensity, width, height } = { ...DEFAULT_CANVAS_ENGINE_OPTIONS, ...options };\n\n    this.canvas = canvas as HTMLCanvasElement;\n    this.pixelDensity = pixelDensity as number;\n    this.width = width as number;\n    this.height = height as number;\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    this.canvas.width = this.width * this.pixelDensity;\n    this.canvas.height = this.height * this.pixelDensity;\n    this.canvas.style.width = `${this.width}px`;\n    this.canvas.style.height = `${this.height}px`;\n\n    this.canvas.addEventListener('contextmenu', event => {\n      event.preventDefault();\n    });\n\n    this.canvas.addEventListener('pointerdown', event => {\n      event.preventDefault();\n      const { x: canvasX, y: canvasY } = this.canvas.getBoundingClientRect();\n      const x = event.clientX - canvasX;\n      const y = event.clientY - canvasY;\n      const children = [...this.children].reverse();\n      for (let i = 0; i < children.length; i++) {\n        const container = children[i];\n        if (container.active && typeof container.onClick === 'function' && container.isHitBy(x, y)) {\n          if (container.interactive) {\n            container.onClick({ event, container, engine: this });\n          }\n          break;\n        }\n      }\n    });\n  }\n\n  public add(...container: PaintContainer[]): void {\n    this.children.push(...container);\n  }\n\n  public clear(): void {\n    this.children = [];\n  }\n\n  public render(): void {\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].render(this);\n    }\n  }\n}\n","import shuffle from 'array-shuffle';\n\nimport { GameFinalStatus } from './game-status';\nimport { GameTile } from './game-tile';\nimport { PaintContainer } from './paint-container';\nimport { PaintEngine } from './paint-engine';\n\nexport class GameBoard {\n  private paintEngine!: PaintEngine;\n  private width!: number;\n  private height!: number;\n  private minesIndex!: boolean[];\n  private tiles!: GameTile[];\n  private pauseOverlay!: PaintContainer | null;\n  private flagsCount!: number;\n  private triggeredMinedTile!: GameTile | null;\n\n  constructor(\n    private readonly view: HTMLCanvasElement,\n    private readonly tileSize: number,\n    private readonly tilesX: number,\n    private readonly tilesY: number,\n    private readonly minesCount: number,\n    private readonly firstClick: () => void,\n    private readonly setFlagsCount: (flagsCount: number) => void,\n    private readonly unpause: () => void,\n    private readonly finish: (finalStatus: GameFinalStatus) => void,\n    private readonly close: () => void\n  ) {\n    this.initBoard();\n  }\n\n  public initBoard(): void {\n    this.width = this.tilesX * this.tileSize;\n    this.height = this.tilesY * this.tileSize;\n    if (this.paintEngine) {\n      this.paintEngine.clear();\n    } else {\n      this.paintEngine = new PaintEngine({\n        canvas: this.view,\n        width: this.width,\n        height: this.height,\n        pixelDensity: 2\n      });\n    }\n    this.flagsCount = 0;\n    this.tiles = [];\n    this.minesIndex = [];\n    this.triggeredMinedTile = null;\n    this.pauseOverlay = null;\n    this.initTiles();\n  }\n\n  public showPauseOverlay(): void {\n    if (!this.pauseOverlay) {\n      this.pauseOverlay = new PaintContainer({\n        fillStyle: '#6b8e23',\n        width: this.width,\n        height: this.height,\n        onClick: () => this.unpause()\n      });\n      this.paintEngine.add(this.pauseOverlay);\n    }\n    this.pauseOverlay.active = true;\n    this.paintEngine.render();\n  }\n\n  public hidePauseOverlay(): void {\n    if (this.pauseOverlay) {\n      this.pauseOverlay.active = false;\n      this.paintEngine.render();\n    }\n  }\n\n  private initTiles(): void {\n    for (let y = 0; y < this.tilesY; y++) {\n      for (let x = 0; x < this.tilesX; x++) {\n        const tile = new GameTile(x, y, this.tileSize, ({ event }) => this.onTileClick(event, x, y));\n        this.tiles.push(tile);\n        this.paintEngine.add(tile.container);\n      }\n    }\n    this.paintEngine.render();\n  }\n\n  private initMines(initClickX: number, initClickY: number): void {\n    let minesIndex: boolean[] = [];\n    for (let m = 0; m < this.tilesX * this.tilesY; m++) {\n      minesIndex.push(m < this.minesCount);\n    }\n    // shuffle until the initial click hits a field with no mines nearby\n    let i = 0;\n    do {\n      minesIndex = shuffle(minesIndex);\n      i++;\n    } while (\n      i < 10_000 && // set a max value for crazy custom game settings\n      (minesIndex[this.getTileIndex(initClickX, initClickY)] ||\n        this.getNearbyTileCoordinates(initClickX, initClickY).some(([x, y]) => minesIndex[this.getTileIndex(x, y)]))\n    );\n    this.minesIndex = minesIndex;\n  }\n\n  private populateTiles(): void {\n    this.tiles.forEach((tile, i) =>\n      tile.populate(\n        this.minesIndex[i],\n        this.getNearbyTileCoordinates(tile.x, tile.y).filter(([x, y]) => this.minesIndex[this.getTileIndex(x, y)])\n          .length\n      )\n    );\n  }\n\n  private onTileClick(event: PointerEvent, x: number, y: number): void {\n    if (this.minesIndex.length === 0) {\n      this.firstClick();\n      this.initMines(x, y);\n      this.populateTiles();\n    }\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.button > 1) {\n      this.toggleFlag(x, y);\n    } else {\n      this.uncoverTile(x, y);\n    }\n  }\n\n  private getTileIndex(x: number, y: number): number {\n    return y * this.tilesX + x;\n  }\n\n  private getNearbyTileCoordinates(x: number, y: number): [number, number][] {\n    // prettier-ignore\n    const nearbyTiles: [number, number][] = [\n      [x - 1, y - 1], [x + 0, y - 1], [x + 1, y - 1],\n      [x - 1, y + 0],                 [x + 1, y + 0],\n      [x - 1, y + 1], [x + 0, y + 1], [x + 1, y + 1]\n    ];\n    return nearbyTiles.filter(([a, b]) => a >= 0 && a < this.tilesX && b >= 0 && b < this.tilesY);\n  }\n\n  private uncoverTile(x: number, y: number): void {\n    const tile = this.tiles[this.getTileIndex(x, y)];\n    if (!tile.isCovered || tile.isFlagged) {\n      return;\n    }\n    tile.uncover();\n    if (tile.isMined) {\n      this.triggeredMinedTile = tile;\n      this.tiles.forEach(t => {\n        if (t.isMined) {\n          t.uncover();\n        }\n      });\n    } else if (tile.hasNearbyMines === 0) {\n      this.getNearbyTileCoordinates(x, y).forEach(([a, b]) => this.uncoverTile(a, b));\n    }\n    this.updateBoardState();\n  }\n\n  private toggleFlag(x: number, y: number): void {\n    const tile = this.tiles[this.getTileIndex(x, y)];\n    if (!tile.isCovered) {\n      return;\n    }\n    tile.toggleFlag();\n    this.flagsCount = this.tiles.reduce((c, t) => (t.isFlagged ? ++c : c), 0);\n    this.setFlagsCount(this.flagsCount);\n    this.updateBoardState();\n  }\n\n  private isBoardSolved(): boolean {\n    return this.tiles.every(\n      tile =>\n        (tile.isMined && (tile.isFlagged || tile.isCovered)) || (!tile.isMined && !tile.isFlagged && !tile.isCovered)\n    );\n  }\n\n  private updateBoardState(): void {\n    const lost = !!this.triggeredMinedTile;\n    const won = !lost && this.isBoardSolved();\n    if (lost || won) {\n      const fillStyle = won ? 'rgba(0, 255, 0, 0.2)' : 'rgba(255, 0, 0, 0.2)';\n      const overlay = new PaintContainer({\n        fillStyle,\n        width: this.width,\n        height: this.height,\n        onClick: () => this.close()\n      });\n      this.paintEngine.add(overlay);\n      this.finish(won ? GameFinalStatus.Won : GameFinalStatus.Lost);\n    }\n    this.paintEngine.render();\n  }\n}\n","import { Component, createRef, h, VNode } from 'preact';\nimport { route } from 'preact-router';\nimport { useContext } from 'preact/hooks';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AppRoute } from '../lib/app-route.enum';\nimport { GameBoard } from '../lib/game-board';\nimport { GameAction } from '../store/game/game-actions';\nimport { gameSelectors } from '../store/game/game-selectors';\nimport { gameStore, gameStoreContext } from '../store/game/game-store';\n\nexport class GameGfx extends Component {\n  private readonly viewRef = createRef<HTMLCanvasElement>();\n  private readonly unsubscribeSubject = new Subject<void>();\n\n  private board!: GameBoard;\n  private tileSize!: number;\n  private tilesX!: number;\n  private tilesY!: number;\n  private minesCount!: number;\n\n  constructor() {\n    super();\n    gameStore.actions$.pipe(takeUntil(this.unsubscribeSubject)).subscribe(({ name, state }) => {\n      if (name === GameAction.Restart) {\n        this.board.initBoard();\n      } else if (name === GameAction.Pause && gameSelectors.isPaused(state)) {\n        this.board.showPauseOverlay();\n      } else if (name === GameAction.Unpause && gameSelectors.isRunning(state)) {\n        this.board.hidePauseOverlay();\n      }\n      if (!gameSelectors.player(state)) {\n        route(AppRoute.Home);\n      }\n    });\n  }\n\n  public componentDidMount(): void {\n    this.board = new GameBoard(\n      this.viewRef.current as HTMLCanvasElement,\n      this.tileSize,\n      this.tilesX,\n      this.tilesY,\n      this.minesCount,\n      () => gameStore.dispatch(GameAction.FirstClick),\n      flagsCount => gameStore.dispatch(GameAction.SetFlagsCount, { flagsCount }),\n      () => gameStore.dispatch(GameAction.Unpause),\n      finalStatus => gameStore.dispatch(GameAction.Finish, { finalStatus }),\n      () => route(AppRoute.Home)\n    );\n  }\n\n  public componentWillUnmount(): void {\n    this.unsubscribeSubject.next();\n  }\n\n  public render(): VNode {\n    const gameState = useContext(gameStoreContext);\n    if (!this.board) {\n      const { tileSize, tilesX, tilesY, minesCount } = gameState;\n      this.tileSize = tileSize;\n      this.tilesX = tilesX;\n      this.tilesY = tilesY;\n      this.minesCount = minesCount;\n    }\n    return (\n      <div class=\"c-game-gfx\">\n        <canvas class=\"c-game-gfx__canvas\" ref={this.viewRef} onContextMenu={this.onRightClick}></canvas>\n        {/* {isFinished || isPaused ? <GameOverlay /> : ''} */}\n      </div>\n    );\n  }\n\n  public onRightClick = (event: Event): void => {\n    event.preventDefault();\n  };\n}\n","import { Component, h, VNode } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport { GameFinalStatus } from '../lib/game-status';\nimport { IconName } from '../lib/icon-name.enum';\nimport { GameAction } from '../store/game/game-actions';\nimport { gameStore, gameStoreContext } from '../store/game/game-store';\n\nexport class Restart extends Component {\n  public render(): VNode {\n    const { finalStatus } = useContext(gameStoreContext);\n    const iconName =\n      // eslint-disable-next-line unicorn/no-nested-ternary\n      finalStatus === null ? IconName.Magawa : finalStatus === GameFinalStatus.Won ? IconName.Party : IconName.Dead;\n    return (\n      <button class=\"c-restart\" title=\"Restart Game\" onClick={this.onClick}>\n        <img class=\"e-icon\" src={`icons/${iconName}.png`} />\n      </button>\n    );\n  }\n\n  private readonly onClick = (event: Event): void => {\n    event.preventDefault();\n    gameStore.dispatch(GameAction.Restart);\n  };\n}\n","import { differenceInMilliseconds } from 'date-fns';\nimport { Component, h, VNode } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport { formatDuration } from '../lib/format-duration.function';\nimport { IconName } from '../lib/icon-name.enum';\nimport { GameAction } from '../store/game/game-actions';\nimport { gameSelectors } from '../store/game/game-selectors';\nimport { gameStore, gameStoreContext } from '../store/game/game-store';\n\nexport class Timer extends Component {\n  private timeout!: number;\n\n  public componentWillUnmount(): void {\n    this.stopTimeout();\n  }\n\n  public render(): VNode {\n    const gameState = useContext(gameStoreContext);\n    const isPaused = gameSelectors.isPaused(gameState);\n    const isFinished = gameSelectors.isFinished(gameState);\n    if (isFinished || isPaused) {\n      this.stopTimeout();\n    } else {\n      // this.startTimeout(gameState.startedAt as Date);\n      this.startTimeout();\n    }\n    const duration = this.getDuration(gameState.startedAt as Date, gameState.pausedAt);\n    const label = isPaused ? 'Continue' : 'Pause';\n    const icon = isPaused ? IconName.Zzz : IconName.Stopwatch;\n    return (\n      <button class=\"c-timer\" title={label} onClick={this.onClick}>\n        <div class=\"c-timer__icon\">\n          <img class=\"e-icon\" src={`icons/${icon}.png`} />\n        </div>\n        <div class=\"c-timer__label\">{duration}</div>\n      </button>\n    );\n  }\n\n  private readonly onClick = (event: Event): void => {\n    event.preventDefault();\n    gameStore.dispatch(GameAction.TogglePause);\n  };\n\n  private getDuration(startedAt: Date, pausedAt: Date | null): string {\n    const date = pausedAt === null ? new Date() : pausedAt;\n    const duration = startedAt ? differenceInMilliseconds(date, startedAt) : 0;\n    return formatDuration(duration, false);\n  }\n\n  // private startTimeout(startedAt: Date): void {\n  private startTimeout(): void {\n    this.stopTimeout();\n    this.timeout = window.setTimeout(() => {\n      this.forceUpdate();\n    }, 1000);\n  }\n\n  private stopTimeout(): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n  }\n}\n","import { differenceInMilliseconds } from 'date-fns';\nimport { Component, Fragment, h, VNode } from 'preact';\nimport { Link } from 'preact-router';\nimport { useContext } from 'preact/hooks';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { AppRoute } from '../lib/app-route.enum';\nimport { GameDifficulty } from '../lib/game-difficulty';\nimport { highscoresManager } from '../lib/highscores-manager';\nimport { HighscoreGameDifficulty, HighscoresEntry, HighscoresForDifficulty } from '../lib/highscores.interface';\nimport { GameAction } from '../store/game/game-actions';\nimport { gameSelectors } from '../store/game/game-selectors';\nimport { gameStore, gameStoreContext } from '../store/game/game-store';\n\nimport { Congratulations } from './congratulations';\nimport { Flags } from './flags';\nimport { GameGfx } from './game-gfx';\nimport { HighscoresTable } from './highscores-table';\nimport { Restart } from './restart';\nimport { Timer } from './timer';\n\ninterface GameViewState {\n  highscores: HighscoresForDifficulty;\n  entry: HighscoresEntry;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  gameStore.actions$.subscribe(({ name, payload, state }) =>\n    // eslint-disable-next-line no-console\n    console.log('Action:', name, '\\nPayload:', payload, '\\nState:', state)\n  );\n}\n\nexport class GameView extends Component<object, GameViewState> {\n  private readonly unsubscribeSubject = new Subject<void>();\n\n  private highscoreSaved = false;\n\n  constructor() {\n    super();\n    gameStore.dispatch(GameAction.Start);\n\n    fromEvent<Event>(window, 'blur')\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(() => gameStore.dispatch(GameAction.Pause));\n\n    fromEvent<KeyboardEvent>(document, 'keydown')\n      .pipe(\n        takeUntil(this.unsubscribeSubject),\n        filter(event => event.code === 'KeyP' || event.code === 'Escape')\n      )\n      .subscribe(() => gameStore.dispatch(GameAction.TogglePause));\n  }\n\n  public componentWillUnmount(): void {\n    this.unsubscribeSubject.next();\n    gameStore.dispatch(GameAction.Close);\n  }\n\n  public render(_props: object, { highscores, entry }: GameViewState): VNode {\n    const gameState = useContext(gameStoreContext);\n    if (gameSelectors.isClosed(gameState)) {\n      return <div></div>;\n    }\n    const isWon = gameSelectors.isWon(gameState);\n    const { difficulty, startedAt, finishedAt, player } = gameState;\n    if (isWon && !this.highscoreSaved && difficulty !== GameDifficulty.Custom) {\n      this.saveHighscore(startedAt as Date, finishedAt as Date, player as string, difficulty);\n    }\n    const width = gameSelectors.width(gameState);\n    return (\n      <div class=\"c-game-view\">\n        <div class=\"c-game-view__container\" style={`width:${width}px; min-width:${width * 0.5}px`}>\n          <div class=\"c-game-view__bar\">\n            <div class=\"c-game-view__bar-item\">\n              <Timer />\n            </div>\n            <div class=\"c-game-view__bar-item\">\n              <Restart />\n            </div>\n            <div class=\"c-game-view__bar-item\">\n              <Flags />\n            </div>\n          </div>\n          <GameGfx />\n        </div>\n        {isWon ? (\n          <Fragment>\n            <Congratulations entry={entry} />\n            <HighscoresTable list={highscores?.list} highlight={entry?.id} />\n          </Fragment>\n        ) : (\n          ''\n        )}\n        <div className=\"e-back-button\">\n          <Link href={AppRoute.Home} class=\"e-back-button__button e-button\">\n            ← Back\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  private saveHighscore(startedAt: Date, finishedAt: Date, player: string, difficulty: HighscoreGameDifficulty): void {\n    this.highscoreSaved = true;\n    highscoresManager\n      .add(differenceInMilliseconds(finishedAt, startedAt), player, difficulty)\n      .subscribe(({ entry, highscores }) => {\n        this.setState({ highscores, entry });\n      });\n  }\n}\n"],"names":["Congratulations","Component","entry","h","IconName","formatDuration","formatDifficulty","Flags","flagsCount","minesCount","useContext","gameStoreContext","arrayShuffle","array","index","newIndex","hasLeadingSlash","path","hasTrailingSlash","withoutLeadingSlash","withoutTrailingSlash","withoutSlashes","slashJoin","strings","parts","part","i","PaintResourceName","CANVAS_ASSETS","loadPaintAsset","asset","resolve","reject","image","error","BASE_URI","CANVAS_IMAGES","name","src","getPaintAsset","DEFAULT_PAINT_CONTAINER_OPTIONS","PaintContainer","options","width","height","x","y","fillStyle","strokeStyle","strokeWidth","active","interactive","engine","rectProps","container","DEFAULT_PAINT_TEXT_OPTIONS","PaintText","text","fontSize","fontFamily","textAlign","textBaseline","direction","textProps","PaintTexture","GameTile","size","onClick","isMined","nearbyMines","DEFAULT_CANVAS_ENGINE_OPTIONS","PaintEngine","canvas","pixelDensity","event","canvasX","canvasY","children","GameBoard","view","tileSize","tilesX","tilesY","firstClick","setFlagsCount","unpause","finish","close","tile","initClickX","initClickY","minesIndex","m","shuffle","a","b","t","c","lost","won","overlay","GameFinalStatus","GameGfx","createRef","Subject","gameStore","takeUntil","state","GameAction","gameSelectors","route","AppRoute","finalStatus","gameState","Restart","iconName","Timer","isPaused","duration","label","icon","startedAt","pausedAt","differenceInMilliseconds","GameView","fromEvent","filter","_props","highscores","isWon","difficulty","finishedAt","player","GameDifficulty","Fragment","HighscoresTable","Link","highscoresManager"],"mappings":"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","x_google_ignoreList":[2,3]}