{"version":3,"file":"highscores-view-0ClJgXWm.js","sources":["../../src/scripts/components/highscores-view.tsx"],"sourcesContent":["import { Component, createRef, h, VNode } from 'preact';\nimport { Link } from 'preact-router';\n\nimport { AppRoute } from '../lib/app-route.enum';\nimport { DEFAULT_GAME_DIFFICULTY, GameDifficulty } from '../lib/game-difficulty';\nimport { getHighscores, HighscoreGameDifficulty, HighscoresCollection } from '../lib/highscores';\nimport { IconName } from '../lib/icon-name.enum';\n\nimport { HighscoresTable } from './highscores-table';\n\ninterface HighscoresViewState {\n  difficulty: HighscoreGameDifficulty;\n  collection?: HighscoresCollection;\n  page: number;\n}\n\nexport class HighscoresView extends Component<object, HighscoresViewState> {\n  private readonly difficulties = Object.entries(GameDifficulty).filter(\n    ([, value]) => typeof value === 'number' && value !== GameDifficulty.Custom\n  ) as [string, HighscoreGameDifficulty][];\n\n  private readonly refSelect = createRef<HTMLSelectElement>();\n  private readonly refInput = createRef<HTMLInputElement>();\n\n  constructor(props: object, state: HighscoresViewState) {\n    super(props, state);\n    const difficulty = DEFAULT_GAME_DIFFICULTY;\n    const player = '';\n    const page = 1;\n    this.setState({ difficulty, page });\n    this.request(difficulty, page, player);\n  }\n\n  public render(_props: object, { difficulty, collection }: HighscoresViewState): VNode {\n    const { items, total, page, pages, nextPage, previousPage } = (collection as HighscoresCollection) || {};\n    return (\n      <div class=\"c-highscores-view\">\n        <h1 class=\"c-highscores-view__title e-title\">\n          Highscores <img class=\"e-icon\" src={`icons/${IconName.Trophy}.png`} />\n        </h1>\n        <div class=\"c-highscores-view__options\">\n          <div class=\"c-highscores-view__option\">\n            <label class=\"c-highscores-view__label e-label\" htmlFor=\"difficulty\">\n              Difficulty\n            </label>\n            <select\n              ref={this.refSelect}\n              onInput={this.onChangeOptions}\n              class=\"c-highscores-view__select e-select\"\n              id=\"difficulty\"\n              name=\"difficulty\"\n            >\n              {this.difficulties.map(([key, value]) => (\n                <option class=\"c-highscores-view__option e-option\" value={value} selected={difficulty === value}>\n                  {key}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div class=\"c-highscores-view__option\">\n            <form onSubmit={this.onChangeOptions}>\n              <label class=\"c-highscores-view__label e-label\" htmlFor=\"player\">\n                Player\n              </label>\n              <input\n                ref={this.refInput}\n                id=\"player\"\n                name=\"player\"\n                pattern=\"^[\\w*?]*$\"\n                class=\"c-highscores-view__input e-input\"\n              />\n            </form>\n          </div>\n        </div>\n        <div class=\"c-highscores-view__table\">\n          <HighscoresTable rows={items} highlight=\"CrjD8A1cqGjxtpVT70aMM\" />\n          {page && pages ? (\n            <div class=\"c-highscores-view__pagination\">\n              <div>\n                <button\n                  disabled={!previousPage}\n                  onClick={() => this.changePage(previousPage as number)}\n                  title={`Page ${previousPage}`}\n                >\n                  ◀\n                </button>\n              </div>\n              <div>{total} Entries</div>\n              <div>\n                Page {page} of {pages}\n              </div>\n              <div>\n                <button\n                  disabled={!nextPage}\n                  onClick={() => this.changePage(nextPage as number)}\n                  title={`Page ${nextPage}`}\n                >\n                  ▶\n                </button>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"e-back-button\">\n          <Link href={AppRoute.Home} class=\"e-back-button__button e-button\">\n            ← Back\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  private readonly onChangeOptions = (event: Event): void => {\n    event.preventDefault();\n    const difficulty = Number.parseInt(`${this.refSelect.current?.value}`, 10);\n    const player = this.refInput.current?.value;\n    const page = this.state.page;\n    this.request(difficulty, page, player);\n  };\n\n  private readonly changePage = (page: number) => {\n    const difficulty = Number.parseInt(`${this.refSelect.current?.value}`, 10);\n    const player = this.refInput.current?.value;\n    this.request(difficulty, page, player);\n  };\n\n  private request(difficulty: HighscoreGameDifficulty, page: number, player?: string): void {\n    this.setState({ difficulty, collection: undefined });\n    getHighscores({ difficulty, player, page })\n      .then(collection => {\n        this.setState({ difficulty, collection });\n      })\n      .catch(() => {\n        this.setState({ difficulty, collection: { items: [] } as unknown as HighscoresCollection });\n      });\n  }\n}\n"],"names":["HighscoresView","Component","GameDifficulty","value","createRef","props","state","difficulty","DEFAULT_GAME_DIFFICULTY","player","page","_props","collection","items","total","pages","nextPage","previousPage","h","IconName","key","HighscoresTable","Link","AppRoute","event","getHighscores"],"mappings":"+NAgBO,MAAMA,UAAuBC,CAAuC,CACxD,aAAe,OAAO,QAAQC,CAAc,EAAE,OAC7D,CAAC,CAAA,CAAGC,CAAK,IAAM,OAAOA,GAAU,UAAYA,IAAUD,EAAe,MAAA,EAGtD,UAAYE,EAA6B,EACzC,SAAWA,EAA4B,EAExD,YAAYC,EAAeC,EAA4B,CACrD,MAAMD,EAAOC,CAAK,EAClB,MAAMC,EAAaC,EACbC,EAAS,GACTC,EAAO,EACb,KAAK,SAAS,CAAE,WAAAH,EAAY,KAAAG,CAAM,CAAA,EAC7B,KAAA,QAAQH,EAAYG,EAAMD,CAAM,CACvC,CAEO,OAAOE,EAAgB,CAAE,WAAAJ,EAAY,WAAAK,GAA0C,CAC9E,KAAA,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAJ,EAAM,MAAAK,EAAO,SAAAC,EAAU,aAAAC,CAAA,EAAkBL,GAAuC,GACtG,OACGM,EAAA,MAAA,CAAI,MAAM,mBAAA,IACR,KAAG,CAAA,MAAM,kCAAmC,EAAA,gBAC/B,MAAI,CAAA,MAAM,SAAS,IAAK,SAASC,EAAS,MAAM,MAAQ,CAAA,CACtE,EACCD,EAAA,MAAA,CAAI,MAAM,gCACR,MAAI,CAAA,MAAM,2BACT,EAAAA,EAAC,SAAM,MAAM,mCAAmC,QAAQ,YAAA,EAAa,YAErE,EACAA,EAAC,SAAA,CACC,IAAK,KAAK,UACV,QAAS,KAAK,gBACd,MAAM,qCACN,GAAG,aACH,KAAK,YAAA,EAEJ,KAAK,aAAa,IAAI,CAAC,CAACE,EAAKjB,CAAK,IAChCe,EAAA,SAAA,CAAO,MAAM,qCAAqC,MAAAf,EAAc,SAAUI,IAAeJ,CAAA,EACvFiB,CACH,CACD,CAAA,CAEL,EACAF,EAAC,OAAI,MAAM,2BAAA,IACR,OAAK,CAAA,SAAU,KAAK,mBAClB,QAAM,CAAA,MAAM,mCAAmC,QAAQ,QAAA,EAAS,QAEjE,EACAA,EAAC,QAAA,CACC,IAAK,KAAK,SACV,GAAG,SACH,KAAK,SACL,QAAQ,aACR,MAAM,kCAAA,CAEV,CAAA,CACF,CACF,IACC,MAAI,CAAA,MAAM,0BACT,EAAAA,EAACG,EAAgB,CAAA,KAAMR,EAAO,UAAU,uBAAA,CAAwB,EAC/DH,GAAQK,IACN,MAAI,CAAA,MAAM,+BACT,EAAAG,EAAC,MACC,KAAAA,EAAC,SAAA,CACC,SAAU,CAACD,EACX,QAAS,IAAM,KAAK,WAAWA,CAAsB,EACrD,MAAO,QAAQA,CAAY,EAAA,EAC5B,GAAA,CAGH,EACCC,EAAA,MAAA,KAAKJ,EAAM,UAAQ,EACnBI,EAAA,MAAA,KAAI,QACGR,EAAK,OAAKK,CAClB,IACC,MACC,KAAAG,EAAC,SAAA,CACC,SAAU,CAACF,EACX,QAAS,IAAM,KAAK,WAAWA,CAAkB,EACjD,MAAO,QAAQA,CAAQ,EAAA,EACxB,GAAA,CAGH,CACF,EAEA,EAEJ,EACAE,EAAC,OAAI,UAAU,eAAA,EACZA,EAAAI,EAAA,CAAK,KAAMC,EAAS,KAAM,MAAM,kCAAiC,QAElE,CACF,CACF,CAEJ,CAEiB,gBAAmBC,GAAuB,CACzDA,EAAM,eAAe,EACf,MAAAjB,EAAa,OAAO,SAAS,GAAG,KAAK,UAAU,SAAS,KAAK,GAAI,EAAE,EACnEE,EAAS,KAAK,SAAS,SAAS,MAChCC,EAAO,KAAK,MAAM,KACnB,KAAA,QAAQH,EAAYG,EAAMD,CAAM,CAAA,EAGtB,WAAcC,GAAiB,CACxC,MAAAH,EAAa,OAAO,SAAS,GAAG,KAAK,UAAU,SAAS,KAAK,GAAI,EAAE,EACnEE,EAAS,KAAK,SAAS,SAAS,MACjC,KAAA,QAAQF,EAAYG,EAAMD,CAAM,CAAA,EAG/B,QAAQF,EAAqCG,EAAcD,EAAuB,CACxF,KAAK,SAAS,CAAE,WAAAF,EAAY,WAAY,OAAW,EACnDkB,EAAc,CAAE,WAAAlB,EAAY,OAAAE,EAAQ,KAAAC,EAAM,EACvC,KAAmBE,GAAA,CAClB,KAAK,SAAS,CAAE,WAAAL,EAAY,WAAAK,CAAY,CAAA,CAAA,CACzC,EACA,MAAM,IAAM,CACN,KAAA,SAAS,CAAE,WAAAL,EAAY,WAAY,CAAE,MAAO,CAAA,CAAG,CAAA,CAAsC,CAAA,CAC3F,CACL,CACF"}